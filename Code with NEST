import nest
import pylab as pl

#########################create neuron model with background current input#############################
neuron = nest.Create("iaf_neuron")
nest.SetStatus(neuron, {"I_e": 376.0})
neuron2 = nest.Create("iaf_neuron")
nest.SetStatus(neuron2,{"I_e":370.0})

multimeter = nest.Create("multimeter")
nest.SetStatus(multimeter, {"withtime":True, "record_from":["V_m"]})

spikedetector = nest.Create("spike_detector",params={"withgid": True, "withtime": True})

nest.Connect(multimeter, neuron)
nest.Connect(neuron, spikedetector)
nest.Connect(multimeter,neuron2)
nest.Connect(neuron2,spikedetector)

nest.Simulate(1000.0)

dmm = nest.GetStatus(multimeter)[0]
Vms1 = dmm["events"]["V_m"][::2]
ts1 = dmm["events"]["times"][::2]
Vms2 = dmm["events"]["V_m"][1::2]
ts2 = dmm["events"]["times"][1::2]

pl.figure(1)
pl.plot(ts1, Vms1)
pl.figure(2)
pl.plot(ts2, Vms2)

dsD = nest.GetStatus(spikedetector, keys = "events")[0]
evs = dsD["senders"]
ts = dsD["times"]
pylab.figure(3)
pylab.plot(ts, evs,".")#This is raster plot
pylab.show()


##################################create neuron model with poisson noise input or spike input###########################
noise_ex = nest.Create("poisson_generator")
noise_in = nest.Create("poisson_generator")

nest.SetStatus(noise_ex,{"rate":80000.0})
nest.SetStatus(noise_ex,{"rate":15000.0})

neuron = nest.Create("iaf_neuron")
nest.SetStatus(neuron, {"I_e": 0.0})

syn_dict_ex = {"weight":1.2}
syn_dict_in = {"weight":-2.0}

nest.Connect(noise_ex,neuron,syn_spec = syn_dict_ex)
nest.Connect(noise_in,neuron,syn_spec = syn_dict_in)


SPG = nest.Create("spike_generator")
nest.SetStatus(SPG,{"spike_times":[200.0]})
syn_dict_1 = {"weight":1.8}
syn_dict_2 = {"weight":1.}

neuron1 = nest.Create("iaf_psc_exp")
neuron2 = nest.Create("iaf_psc_alpha")
nest.SetStatus(neuron1,{"tau_syn_ex":3.0})

nest.Connect(SPG,neuron1,syn_spec = syn_dict_1)
nest.Connect(SPG,neuron2,syn_spec = syn_dict_2)

###########################################test with changing paprmeters###################################################
nest.ResetKernel()
I_e = np.arange(370.,490.,1.)
rates = []

neuron = nest.Create("iaf_psc_exp",params={"C_m":250.0,"tau_m":10.0,"V_th":15.0,"E_L":0.,"V_reset":0.,"V_m":0.})
spikedetector = nest.Create("spike_detector",params={"withgid": True, "withtime": True})
nest.Connect(neuron, spikedetector)

for i in I_e:
	nest.SetStatus(neuron,{"I_e":i})
	nest.Simulate(1000.0)
	dsD = nest.GetStatus(spikedetector, keys = "events")[0]
	evs = dsD["senders"]
	rate = len(evs)/1.
	rates.append(rate)
	nest.SetStatus(spikedetector, {"n_events":0})


pylab.plot(I_e,rates)
pylab.xlabel('backgrund curent [pA]')
pylab.ylabel('firing rate [Hz]')
pylab.show()

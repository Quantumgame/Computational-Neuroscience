#use Euler method to iteratates the initial value of a dynamical variable x in increments of time
#when the ordinary differential equation d(x(t))/d(t)=f(x(t)) is given
#to itertate the value of 1D dynamic system, f(x+t)=f(x)+f(x)'*t
#in this exercise, X_0=1, f(x(t))=-x(t)

import numpy as np
import pylab as pl
steps=100
x=np.zeros(steps)
x[0]=1
t=0.1
#stepsize (t) is the interval you selected,steps indicate how many times you iteratate, and x[0] is the initial value for Euler Method
for i in range(0,steps-1):
    x[i+1]=x[i]-x[i]*t
pl.plot(x)
#This is forward Euler method
#when f(x(t))=0, this point is called fixed point.


#backward Euler Method use f(x+t)=f(x)+f(x+t)'*t
#http://en.wikipedia.org/wiki/Backward_Euler_method
import numpy as np
import pylab as pl
steps=100
x=np.zeros(steps)
x[0]=1
t=0.1
for i in range(0,steps-1):
    x[i+1]=x[i]-x[i+1]*t
pl.plot(x)


#midpoint method
#http://en.wikipedia.org/wiki/Midpoint_method
import numpy as np
import pylab as pl
steps=100
x=np.zeros(steps)
x[0]=1
t=0.1
for i in range(0,steps-2):
    x[i+2]=x[i]-x[i+1]*2*t
pl.plot(x)
